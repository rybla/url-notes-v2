{"title":"GitHub - omnara-ai/omnara: Omnara (YC S25) - Talk to Your AI Agents from Anywhere!","byline":"omnara-ai","lang":"en","content":"<div id=\"readability-page-1\" class=\"page\"><div data-hpc=\"true\"><article itemprop=\"text\"><p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">Omnara - Mission Control for Your AI Agents 🚀</h2><a id=\"user-content-omnara---mission-control-for-your-ai-agents-\" aria-label=\"Permalink: Omnara - Mission Control for Your AI Agents 🚀\" href=\"#omnara---mission-control-for-your-ai-agents-\"></a></p>\n<p dir=\"auto\"><strong>Your AI workforce launchpad, in your pocket.</strong></p>\n<p dir=\"auto\"><a href=\"https://badge.fury.io/py/omnara\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/4e9f14c1aac8602c0a5034778f609314d70f54cb7541229060d5d60d870d919f/68747470733a2f2f62616467652e667572792e696f2f70792f6f6d6e6172612e737667\" alt=\"PyPI version\" data-canonical-src=\"https://badge.fury.io/py/omnara.svg\"></a>\n<a href=\"https://pepy.tech/project/omnara\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/b1a6283158a416f2cbb8e0b6c827c299fc90cc79a0db9e49794df703ab4c9397/68747470733a2f2f706570792e746563682f62616467652f6f6d6e617261\" alt=\"Downloads\" data-canonical-src=\"https://pepy.tech/badge/omnara\"></a>\n<a href=\"https://pypi.org/project/omnara/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/f26a090cb9637e79f33aa901f555c51112f59499cb33499162b774fe8e2fc0af/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6f6d6e6172612e737667\" alt=\"Python Versions\" data-canonical-src=\"https://img.shields.io/pypi/pyversions/omnara.svg\"></a>\n<a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/5ce2e21e84680df1ab24807babebc3417d27d66e0826a350eb04ab57f4c8f3e5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4170616368655f322e302d626c75652e737667\" alt=\"License\" data-canonical-src=\"https://img.shields.io/badge/License-Apache_2.0-blue.svg\"></a>\n<a href=\"https://github.com/omnara-ai/omnara\"><img src=\"https://camo.githubusercontent.com/616c2bbd8593ee60f04a41c8c44e87113b33eab0839196d0caa2eb7d85767d92/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6f6d6e6172612d61692f6f6d6e6172613f7374796c653d736f6369616c\" alt=\"GitHub stars\" data-canonical-src=\"https://img.shields.io/github/stars/omnara-ai/omnara?style=social\"></a>\n<a href=\"https://github.com/astral-sh/ruff\"><img src=\"https://camo.githubusercontent.com/051a04ae958f4a1a5d6444df4cdc520305eef93d5028e6d4c7cd16efa3136cd4/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f61737472616c2d73682f727566662f6d61696e2f6173736574732f62616467652f76322e6a736f6e\" alt=\"Ruff\" data-canonical-src=\"https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/omnara-ai/omnara/blob/main/docs/assets/three-panel.png\"><img src=\"https://github.com/omnara-ai/omnara/raw/main/docs/assets/three-panel.png\" alt=\"Omnara Mobile Experience\"></a></p>\n\n<hr>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">🚀 What is Omnara?</h2><a id=\"user-content--what-is-omnara\" aria-label=\"Permalink: 🚀 What is Omnara?\" href=\"#-what-is-omnara\"></a></p>\n<p dir=\"auto\">Omnara transforms your AI agents (Claude Code, Cursor, GitHub Copilot, and more) from silent workers into communicative teammates. Get real-time visibility into what your agents are doing, respond to their questions instantly, and guide them to success - all from your phone.</p>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">✨ Key Features</h3><a id=\"user-content--key-features\" aria-label=\"Permalink: ✨ Key Features\" href=\"#-key-features\"></a></p>\n<markdown-accessiblity-table><table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>📊 Real-Time Monitoring</strong></td>\n<td>See every step your AI agents take as they work</td>\n</tr>\n<tr>\n<td><strong>💬 Interactive Q&amp;A</strong></td>\n<td>Respond instantly when agents need guidance</td>\n</tr>\n<tr>\n<td><strong>📱 Mobile-First Design</strong></td>\n<td>Full control from your phone, tablet, or desktop</td>\n</tr>\n<tr>\n<td><strong>🔔 Smart Notifications</strong></td>\n<td>Get alerted only when your input is needed</td>\n</tr>\n<tr>\n<td><strong>🎯 Universal Dashboard</strong></td>\n<td>All your AI agents in one unified interface</td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">🎬 See It In Action</h3><a id=\"user-content--see-it-in-action\" aria-label=\"Permalink: 🎬 See It In Action\" href=\"#-see-it-in-action\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/omnara-ai/omnara/blob/main/docs/assets/iNotifications-Stack.gif\"><img src=\"https://github.com/omnara-ai/omnara/raw/main/docs/assets/iNotifications-Stack.gif\" alt=\"Mobile Notifications\" data-animated-image=\"\"></a></p>\n<blockquote>\n<p dir=\"auto\"><em>The moment your agent needs help, you're there. No more returning to failed jobs hours later.</em></p>\n</blockquote>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/omnara-ai/omnara/blob/main/docs/assets/Mobile-app-showcase.gif\"><img src=\"https://github.com/omnara-ai/omnara/raw/main/docs/assets/Mobile-app-showcase.gif\" alt=\"Agent Activity Feed\" data-animated-image=\"\"></a></p>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">💡 Why Omnara?</h2><a id=\"user-content--why-omnara\" aria-label=\"Permalink: 💡 Why Omnara?\" href=\"#-why-omnara\"></a></p>\n<p dir=\"auto\">We built Omnara because we were tired of:</p>\n<ul dir=\"auto\">\n<li>❌ Starting long agent jobs and finding them stuck hours later</li>\n<li>❌ Missing critical questions that blocked progress</li>\n<li>❌ Having no visibility into what our AI was actually doing</li>\n<li>❌ Being tied to our desks while agents worked</li>\n</ul>\n<p dir=\"auto\"><strong>Now you can:</strong></p>\n<ul dir=\"auto\">\n<li>✅ Launch agents and monitor them from anywhere</li>\n<li>✅ Get push notifications when input is needed</li>\n<li>✅ Send real-time feedback to guide your agents</li>\n<li>✅ Have confidence your AI workforce is productive</li>\n</ul>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">🎯 Real-World Use Cases</h2><a id=\"user-content--real-world-use-cases\" aria-label=\"Permalink: 🎯 Real-World Use Cases\" href=\"#-real-world-use-cases\"></a></p>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">🔍 <strong>Code Review Assistant</strong></h3><a id=\"user-content--code-review-assistant\" aria-label=\"Permalink: 🔍 Code Review Assistant\" href=\"#-code-review-assistant\"></a></p>\n<p dir=\"auto\">Launch Claude to review PRs while you're at lunch. Get notified only if it needs clarification on architectural decisions.</p>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">🚨 <strong>Production Firefighter</strong></h3><a id=\"user-content--production-firefighter\" aria-label=\"Permalink: 🚨 Production Firefighter\" href=\"#-production-firefighter\"></a></p>\n<p dir=\"auto\">Debug production issues from your phone at 2am. See exactly what your agent is investigating and guide it to the right logs.</p>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">📊 <strong>Data Pipeline Guardian</strong></h3><a id=\"user-content--data-pipeline-guardian\" aria-label=\"Permalink: 📊 Data Pipeline Guardian\" href=\"#-data-pipeline-guardian\"></a></p>\n<p dir=\"auto\">Start a 6-hour data migration before leaving work. Get alerts if anything looks suspicious, approve schema changes on the go.</p>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">🏗️ <strong>Refactoring Copilot</strong></h3><a id=\"user-content-️-refactoring-copilot\" aria-label=\"Permalink: 🏗️ Refactoring Copilot\" href=\"#️-refactoring-copilot\"></a></p>\n<p dir=\"auto\">Let Claude refactor that legacy module while you're in meetings. Answer its questions about business logic without context switching.</p>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">🧪 <strong>Test Suite Doctor</strong></h3><a id=\"user-content--test-suite-doctor\" aria-label=\"Permalink: 🧪 Test Suite Doctor\" href=\"#-test-suite-doctor\"></a></p>\n<p dir=\"auto\">Have Claude fix failing tests overnight. Wake up to either green builds or specific questions about expected behavior.</p>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">🏗️ Architecture Overview</h2><a id=\"user-content-️-architecture-overview\" aria-label=\"Permalink: 🏗️ Architecture Overview\" href=\"#️-architecture-overview\"></a></p>\n<p dir=\"auto\">Omnara provides a unified platform for monitoring and controlling your AI agents:</p>\n<section data-identity=\"a42a6243-d3d4-49ce-b2c7-b23ca2d94e54\" data-host=\"https://viewscreen.githubusercontent.com\" data-src=\"https://viewscreen.githubusercontent.com/markdown/mermaid?docs_host=https%3A%2F%2Fdocs.github.com\" data-type=\"mermaid\" aria-label=\"mermaid rendered output container\">\n  <div dir=\"auto\" data-json=\"{&quot;data&quot;:&quot;graph TB\\n    subgraph \\&quot;Your AI Agents\\&quot;\\n        A[🤖 AI Agents&amp;lt;br/&amp;gt;Claude Code, Cursor, etc.]\\n    end\\n\\n    subgraph \\&quot;Omnara Platform\\&quot;\\n        API[🌐 API Server]\\n        DB[(📊 PostgreSQL)]\\n        NOTIFY[🔔 Notification Service&amp;lt;br/&amp;gt;Push/Email/SMS]\\n    end\\n\\n    subgraph \\&quot;Your Devices\\&quot;\\n        M[📱 Mobile App]\\n        W[💻 Web Dashboard]\\n    end\\n\\n    A --&amp;gt;|Send updates| API\\n    API --&amp;gt;|Store data| DB\\n    API --&amp;gt;|Trigger notifications| NOTIFY\\n    NOTIFY --&amp;gt;|Alert users| M\\n    DB --&amp;gt;|Real-time sync| M\\n    DB --&amp;gt;|Real-time sync| W\\n    M --&amp;gt;|User responses| API\\n    W --&amp;gt;|User responses| API\\n    API --&amp;gt;|Deliver feedback| A\\n\\n    style A fill:#e3f2fd,stroke:#1976d2,stroke-width:3px\\n    style API fill:#c8e6c9,stroke:#388e3c,stroke-width:2px\\n    style DB fill:#ffccbc,stroke:#d84315,stroke-width:2px\\n    style NOTIFY fill:#fff59d,stroke:#f57f17,stroke-width:2px\\n    style M fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\\n    style W fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\\n&quot;}\" data-plain=\"graph TB\n    subgraph &quot;Your AI Agents&quot;\n        A[🤖 AI Agents<br/>Claude Code, Cursor, etc.]\n    end\n\n    subgraph &quot;Omnara Platform&quot;\n        API[🌐 API Server]\n        DB[(📊 PostgreSQL)]\n        NOTIFY[🔔 Notification Service<br/>Push/Email/SMS]\n    end\n\n    subgraph &quot;Your Devices&quot;\n        M[📱 Mobile App]\n        W[💻 Web Dashboard]\n    end\n\n    A -->|Send updates| API\n    API -->|Store data| DB\n    API -->|Trigger notifications| NOTIFY\n    NOTIFY -->|Alert users| M\n    DB -->|Real-time sync| M\n    DB -->|Real-time sync| W\n    M -->|User responses| API\n    W -->|User responses| API\n    API -->|Deliver feedback| A\n\n    style A fill:#e3f2fd,stroke:#1976d2,stroke-width:3px\n    style API fill:#c8e6c9,stroke:#388e3c,stroke-width:2px\n    style DB fill:#ffccbc,stroke:#d84315,stroke-width:2px\n    style NOTIFY fill:#fff59d,stroke:#f57f17,stroke-width:2px\n    style M fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\n    style W fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\n\">\n      <pre lang=\"mermaid\" aria-label=\"Raw mermaid code\">graph TB\n    subgraph \"Your AI Agents\"\n        A[🤖 AI Agents&lt;br/&gt;Claude Code, Cursor, etc.]\n    end\n\n    subgraph \"Omnara Platform\"\n        API[🌐 API Server]\n        DB[(📊 PostgreSQL)]\n        NOTIFY[🔔 Notification Service&lt;br/&gt;Push/Email/SMS]\n    end\n\n    subgraph \"Your Devices\"\n        M[📱 Mobile App]\n        W[💻 Web Dashboard]\n    end\n\n    A --&gt;|Send updates| API\n    API --&gt;|Store data| DB\n    API --&gt;|Trigger notifications| NOTIFY\n    NOTIFY --&gt;|Alert users| M\n    DB --&gt;|Real-time sync| M\n    DB --&gt;|Real-time sync| W\n    M --&gt;|User responses| API\n    W --&gt;|User responses| API\n    API --&gt;|Deliver feedback| A\n\n    style A fill:#e3f2fd,stroke:#1976d2,stroke-width:3px\n    style API fill:#c8e6c9,stroke:#388e3c,stroke-width:2px\n    style DB fill:#ffccbc,stroke:#d84315,stroke-width:2px\n    style NOTIFY fill:#fff59d,stroke:#f57f17,stroke-width:2px\n    style M fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\n    style W fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\n</pre>\n    </div>\n  <span role=\"presentation\">\n    <span data-view-component=\"true\">\n      <span>Loading</span>\n</span>\n  </span>\n</section>\n\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">🚀 How It Works</h3><a id=\"user-content--how-it-works\" aria-label=\"Permalink: 🚀 How It Works\" href=\"#-how-it-works\"></a></p>\n<p dir=\"auto\"><strong>1. Connect Your Agent</strong> → Install Omnara SDK or wrapper<br>\n<strong>2. Get Real-Time Updates</strong> → See every step your agent takes<br>\n<strong>3. Respond Instantly</strong> → Answer questions from anywhere</p>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">🔄 Two Ways to Use Omnara</h3><a id=\"user-content--two-ways-to-use-omnara\" aria-label=\"Permalink: 🔄 Two Ways to Use Omnara\" href=\"#-two-ways-to-use-omnara\"></a></p>\n<markdown-accessiblity-table><table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Setup</th>\n<th>How It Works</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Real-Time Monitoring</strong></td>\n<td><code>omnara</code> or <code>uv run omnara</code></td>\n<td>Monitor your Claude session, forwards to Omnara</td>\n</tr>\n<tr>\n<td><strong>Remote Launch</strong></td>\n<td><code>omnara serve</code> or <code>uv run omnara serve</code></td>\n<td>Launch agents from phone, communicate via MCP</td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">🔧 Technical Stack</h3><a id=\"user-content--technical-stack\" aria-label=\"Permalink: 🔧 Technical Stack\" href=\"#-technical-stack\"></a></p>\n<ul dir=\"auto\">\n<li><strong>Backend</strong>: FastAPI with separate read/write servers for optimal performance</li>\n<li><strong>Frontend</strong>: React (Web) + React Native (Mobile)</li>\n<li><strong>Protocol</strong>: Model Context Protocol (MCP) + REST API</li>\n<li><strong>Database</strong>: PostgreSQL with SQLAlchemy ORM</li>\n<li><strong>Auth</strong>: Dual JWT system (Supabase for users, custom for agents)</li>\n</ul>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">🚀 Quick Start</h2><a id=\"user-content--quick-start\" aria-label=\"Permalink: 🚀 Quick Start\" href=\"#-quick-start\"></a></p>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">Option 1: Monitor Your Claude Sessions</h3><a id=\"user-content-option-1-monitor-your-claude-sessions\" aria-label=\"Permalink: Option 1: Monitor Your Claude Sessions\" href=\"#option-1-monitor-your-claude-sessions\"></a></p>\n<p dir=\"auto\">See what Claude is doing in real-time:</p>\n<ol dir=\"auto\">\n<li><strong>Install Omnara</strong>:\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"# Using pip\npip install omnara\n\n# Using uv (faster)\nuv pip install omnara\"><pre><span><span>#</span> Using pip</span>\npip install omnara\n\n<span><span>#</span> Using uv (faster)</span>\nuv pip install omnara</pre></div>\n</li>\n<li><strong>Start monitoring</strong>:\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"# If installed with pip\nomnara\n\n# If installed with uv\nuv run omnara\"><pre><span><span>#</span> If installed with pip</span>\nomnara\n\n<span><span>#</span> If installed with uv</span>\nuv run omnara</pre></div>\n</li>\n<li><strong>Authenticate</strong> in your browser (opens automatically)</li>\n<li><strong>See everything</strong> your agent does in the Omnara dashboard!</li>\n</ol>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">Option 2: Launch Agents Remotely</h3><a id=\"user-content-option-2-launch-agents-remotely\" aria-label=\"Permalink: Option 2: Launch Agents Remotely\" href=\"#option-2-launch-agents-remotely\"></a></p>\n<p dir=\"auto\">Trigger Claude from your phone:</p>\n<ol dir=\"auto\">\n<li><strong>Start the server</strong> on your computer:\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"# Using pip\npip install omnara\nomnara serve\n\n# Using uv (faster)\nuv pip install omnara\nuv run omnara serve\"><pre><span><span>#</span> Using pip</span>\npip install omnara\nomnara serve\n\n<span><span>#</span> Using uv (faster)</span>\nuv pip install omnara\nuv run omnara serve</pre></div>\n</li>\n<li><strong>Set up your agent</strong> in the mobile app with the webhook URL shown</li>\n<li><strong>Launch agents</strong> from anywhere - beach, coffee shop, bed!</li>\n</ol>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">For Developers</h3><a id=\"user-content-for-developers\" aria-label=\"Permalink: For Developers\" href=\"#for-developers\"></a></p>\n<details>\n<summary><b>🛠️ Development Setup</b></summary>\n<p dir=\"auto\"><h4 tabindex=\"-1\" dir=\"auto\">Prerequisites</h4><a id=\"user-content-prerequisites\" aria-label=\"Permalink: Prerequisites\" href=\"#prerequisites\"></a></p>\n<ul dir=\"auto\">\n<li>Python 3.10+</li>\n<li>PostgreSQL</li>\n<li>Node.js (for CLI tools)</li>\n</ul>\n<p dir=\"auto\"><h4 tabindex=\"-1\" dir=\"auto\">Setup Steps</h4><a id=\"user-content-setup-steps\" aria-label=\"Permalink: Setup Steps\" href=\"#setup-steps\"></a></p>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\"><strong>Clone and enter the repository</strong></p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"git clone https://github.com/omnara-ai/omnara\ncd omnara\"><pre>git clone https://github.com/omnara-ai/omnara\n<span>cd</span> omnara</pre></div>\n</li>\n<li>\n<p dir=\"auto\"><strong>Set up Python environment</strong></p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"python -m venv .venv\nsource .venv/bin/activate  # Windows: .venv\\Scripts\\activate\nmake dev-install\"><pre>python -m venv .venv\n<span>source</span> .venv/bin/activate  <span><span>#</span> Windows: .venv\\Scripts\\activate</span>\nmake dev-install</pre></div>\n</li>\n<li>\n<p dir=\"auto\"><strong>Generate JWT keys</strong></p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"python scripts/generate_jwt_keys.py\"><pre>python scripts/generate_jwt_keys.py</pre></div>\n</li>\n<li>\n<p dir=\"auto\"><strong>Configure environment</strong> (create <code>.env</code> file)</p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"DATABASE_URL=postgresql://user:password@localhost:5432/omnara\nSUPABASE_URL=https://your-project.supabase.co\nSUPABASE_ANON_KEY=your-anon-key\nJWT_PRIVATE_KEY='-----BEGIN RSA PRIVATE KEY-----\\n...'\nJWT_PUBLIC_KEY='-----BEGIN PUBLIC KEY-----\\n...'\"><pre><span>DATABASE_URL</span><span>=</span><span>postgresql://user:password@localhost:5432/omnara</span>\n<span>SUPABASE_URL</span><span>=</span><span>https://your-project.supabase.co</span>\n<span>SUPABASE_ANON_KEY</span><span>=</span><span>your-anon-key</span>\n<span>JWT_PRIVATE_KEY</span><span>=</span><span><span>'</span>-----BEGIN RSA PRIVATE KEY-----\\n...<span>'</span></span>\n<span>JWT_PUBLIC_KEY</span><span>=</span><span><span>'</span>-----BEGIN PUBLIC KEY-----\\n...<span>'</span></span></pre></div>\n</li>\n<li>\n<p dir=\"auto\"><strong>Initialize database</strong></p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"cd shared/\nalembic upgrade head\ncd ..\"><pre><span>cd</span> shared/\nalembic upgrade head\n<span>cd</span> ..</pre></div>\n</li>\n<li>\n<p dir=\"auto\"><strong>Run services</strong></p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"# Terminal 1: MCP + REST Server\npython -m servers.app\n\n# Terminal 2: Backend API\ncd backend &amp;&amp; python -m main\"><pre><span><span>#</span> Terminal 1: MCP + REST Server</span>\npython -m servers.app\n\n<span><span>#</span> Terminal 2: Backend API</span>\n<span>cd</span> backend <span>&amp;&amp;</span> python -m main</pre></div>\n</li>\n</ol>\n</details>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">🔧 Advanced Usage (Without CLI)</h2><a id=\"user-content--advanced-usage-without-cli\" aria-label=\"Permalink: 🔧 Advanced Usage (Without CLI)\" href=\"#-advanced-usage-without-cli\"></a></p>\n<blockquote>\n<p dir=\"auto\"><strong>Note</strong>: Most users should use the simple <code>omnara</code> or <code>omnara serve</code> commands shown above. These methods are for advanced users who need custom integrations or want to run the underlying scripts directly.</p>\n</blockquote>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">Method 1: Direct Wrapper Script</h3><a id=\"user-content-method-1-direct-wrapper-script\" aria-label=\"Permalink: Method 1: Direct Wrapper Script\" href=\"#method-1-direct-wrapper-script\"></a></p>\n<p dir=\"auto\">Run the monitoring wrapper directly (what <code>omnara</code> does under the hood):</p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"# Basic usage\npython -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY\n\n# With git diff tracking\npython -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --git-diff\n\n# Custom API endpoint (for self-hosted)\npython -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --base-url https://your-server.com\"><pre><span><span>#</span> Basic usage</span>\npython -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY\n\n<span><span>#</span> With git diff tracking</span>\npython -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --git-diff\n\n<span><span>#</span> Custom API endpoint (for self-hosted)</span>\npython -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --base-url https://your-server.com</pre></div>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">Method 2: Manual MCP Configuration</h3><a id=\"user-content-method-2-manual-mcp-configuration\" aria-label=\"Permalink: Method 2: Manual MCP Configuration\" href=\"#method-2-manual-mcp-configuration\"></a></p>\n<p dir=\"auto\">For custom MCP setups, you can configure manually:</p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n  &quot;mcpServers&quot;: {\n    &quot;omnara&quot;: {\n      &quot;command&quot;: &quot;pipx&quot;,\n      &quot;args&quot;: [&quot;run&quot;, &quot;--no-cache&quot;, &quot;omnara&quot;, &quot;mcp&quot;, &quot;--api-key&quot;, &quot;YOUR_API_KEY&quot;]\n    }\n  }\n}\"><pre>{\n  <span>\"mcpServers\"</span>: {\n    <span>\"omnara\"</span>: {\n      <span>\"command\"</span>: <span><span>\"</span>pipx<span>\"</span></span>,\n      <span>\"args\"</span>: [<span><span>\"</span>run<span>\"</span></span>, <span><span>\"</span>--no-cache<span>\"</span></span>, <span><span>\"</span>omnara<span>\"</span></span>, <span><span>\"</span>mcp<span>\"</span></span>, <span><span>\"</span>--api-key<span>\"</span></span>, <span><span>\"</span>YOUR_API_KEY<span>\"</span></span>]\n    }\n  }\n}</pre></div>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">Method 3: Python SDK</h3><a id=\"user-content-method-3-python-sdk\" aria-label=\"Permalink: Method 3: Python SDK\" href=\"#method-3-python-sdk\"></a></p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"from omnara import OmnaraClient\nimport uuid\n\nclient = OmnaraClient(api_key=&quot;your-api-key&quot;)\ninstance_id = str(uuid.uuid4())\n\n# Log progress and check for user feedback\nresponse = client.send_message(\n    agent_type=&quot;claude-code&quot;,\n    content=&quot;Analyzing codebase structure&quot;,\n    agent_instance_id=instance_id,\n    requires_user_input=False\n)\n\n# Ask for user input when needed\nanswer = client.send_message(\n    content=&quot;Should I refactor this legacy module?&quot;,\n    agent_instance_id=instance_id,\n    requires_user_input=True\n)\"><pre><span>from</span> <span>omnara</span> <span>import</span> <span>OmnaraClient</span>\n<span>import</span> <span>uuid</span>\n\n<span>client</span> <span>=</span> <span>OmnaraClient</span>(<span>api_key</span><span>=</span><span>\"your-api-key\"</span>)\n<span>instance_id</span> <span>=</span> <span>str</span>(<span>uuid</span>.<span>uuid4</span>())\n\n<span># Log progress and check for user feedback</span>\n<span>response</span> <span>=</span> <span>client</span>.<span>send_message</span>(\n    <span>agent_type</span><span>=</span><span>\"claude-code\"</span>,\n    <span>content</span><span>=</span><span>\"Analyzing codebase structure\"</span>,\n    <span>agent_instance_id</span><span>=</span><span>instance_id</span>,\n    <span>requires_user_input</span><span>=</span><span>False</span>\n)\n\n<span># Ask for user input when needed</span>\n<span>answer</span> <span>=</span> <span>client</span>.<span>send_message</span>(\n    <span>content</span><span>=</span><span>\"Should I refactor this legacy module?\"</span>,\n    <span>agent_instance_id</span><span>=</span><span>instance_id</span>,\n    <span>requires_user_input</span><span>=</span><span>True</span>\n)</pre></div>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">Method 4: REST API</h3><a id=\"user-content-method-4-rest-api\" aria-label=\"Permalink: Method 4: REST API\" href=\"#method-4-rest-api\"></a></p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"curl -X POST https://api.omnara.ai/api/v1/messages/agent \\\n  -H &quot;Authorization: Bearer YOUR_API_KEY&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d '{&quot;content&quot;: &quot;Starting deployment process&quot;, &quot;agent_type&quot;: &quot;claude-code&quot;, &quot;requires_user_input&quot;: false}'\"><pre>curl -X POST https://api.omnara.ai/api/v1/messages/agent \\\n  -H <span><span>\"</span>Authorization: Bearer YOUR_API_KEY<span>\"</span></span> \\\n  -H <span><span>\"</span>Content-Type: application/json<span>\"</span></span> \\\n  -d <span><span>'</span>{\"content\": \"Starting deployment process\", \"agent_type\": \"claude-code\", \"requires_user_input\": false}<span>'</span></span></pre></div>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">🤝 Contributing</h2><a id=\"user-content--contributing\" aria-label=\"Permalink: 🤝 Contributing\" href=\"#-contributing\"></a></p>\n<p dir=\"auto\">We love contributions! Check out our <a href=\"https://github.com/omnara-ai/omnara/blob/main/CONTRIBUTING.md\">Contributing Guide</a> to get started.</p>\n<p dir=\"auto\"><h3 tabindex=\"-1\" dir=\"auto\">Development Commands</h3><a id=\"user-content-development-commands\" aria-label=\"Permalink: Development Commands\" href=\"#development-commands\"></a></p>\n<div dir=\"auto\" data-snippet-clipboard-copy-content=\"make lint       # Run code quality checks\nmake format     # Auto-format code\nmake test       # Run test suite\nmake dev-serve  # Start development servers\"><pre>make lint       <span><span>#</span> Run code quality checks</span>\nmake format     <span><span>#</span> Auto-format code</span>\nmake <span>test</span>       <span><span>#</span> Run test suite</span>\nmake dev-serve  <span><span>#</span> Start development servers</span></pre></div>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">📊 Pricing</h2><a id=\"user-content--pricing\" aria-label=\"Permalink: 📊 Pricing\" href=\"#-pricing\"></a></p>\n<markdown-accessiblity-table><table>\n<thead>\n<tr>\n<th>Plan</th>\n<th>Price</th>\n<th>Features</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Free</strong></td>\n<td>$0/mo</td>\n<td>10 agents/month, Core features</td>\n</tr>\n<tr>\n<td><strong>Pro</strong></td>\n<td>$9/mo</td>\n<td>Unlimited agents, Priority support</td>\n</tr>\n<tr>\n<td><strong>Enterprise</strong></td>\n<td><a href=\"https://cal.com/ishaan-sehgal-8kc22w/omnara-demo\" rel=\"nofollow\">Contact Us</a></td>\n<td>Teams, SSO, Custom integrations</td>\n</tr>\n</tbody>\n</table></markdown-accessiblity-table>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">🆘 Support</h2><a id=\"user-content--support\" aria-label=\"Permalink: 🆘 Support\" href=\"#-support\"></a></p>\n<ul dir=\"auto\">\n<li>📖 <a href=\"https://docs.omnara.ai/\" rel=\"nofollow\">Documentation</a></li>\n<li>💬 <a href=\"https://github.com/omnara-ai/omnara/discussions\">GitHub Discussions</a></li>\n<li>🐛 <a href=\"https://github.com/omnara-ai/omnara/issues\">Report Issues</a></li>\n<li>📧 <a href=\"mailto:ishaan@omnara.com\">Email Support</a></li>\n</ul>\n<p dir=\"auto\"><h2 tabindex=\"-1\" dir=\"auto\">📜 License</h2><a id=\"user-content--license\" aria-label=\"Permalink: 📜 License\" href=\"#-license\"></a></p>\n<p dir=\"auto\">Omnara is open source software licensed under the <a href=\"https://github.com/omnara-ai/omnara/blob/main/LICENSE\">Apache 2.0 License</a>.</p>\n<hr>\n\n</article></div></div>","textContent":"Omnara - Mission Control for Your AI Agents 🚀\nYour AI workforce launchpad, in your pocket.\n\n\n\n\n\n\n\n\n\n🚀 What is Omnara?\nOmnara transforms your AI agents (Claude Code, Cursor, GitHub Copilot, and more) from silent workers into communicative teammates. Get real-time visibility into what your agents are doing, respond to their questions instantly, and guide them to success - all from your phone.\n✨ Key Features\n\n\n\nFeature\nDescription\n\n\n\n\n📊 Real-Time Monitoring\nSee every step your AI agents take as they work\n\n\n💬 Interactive Q&A\nRespond instantly when agents need guidance\n\n\n📱 Mobile-First Design\nFull control from your phone, tablet, or desktop\n\n\n🔔 Smart Notifications\nGet alerted only when your input is needed\n\n\n🎯 Universal Dashboard\nAll your AI agents in one unified interface\n\n\n\n🎬 See It In Action\n\n\nThe moment your agent needs help, you're there. No more returning to failed jobs hours later.\n\n\n💡 Why Omnara?\nWe built Omnara because we were tired of:\n\n❌ Starting long agent jobs and finding them stuck hours later\n❌ Missing critical questions that blocked progress\n❌ Having no visibility into what our AI was actually doing\n❌ Being tied to our desks while agents worked\n\nNow you can:\n\n✅ Launch agents and monitor them from anywhere\n✅ Get push notifications when input is needed\n✅ Send real-time feedback to guide your agents\n✅ Have confidence your AI workforce is productive\n\n🎯 Real-World Use Cases\n🔍 Code Review Assistant\nLaunch Claude to review PRs while you're at lunch. Get notified only if it needs clarification on architectural decisions.\n🚨 Production Firefighter\nDebug production issues from your phone at 2am. See exactly what your agent is investigating and guide it to the right logs.\n📊 Data Pipeline Guardian\nStart a 6-hour data migration before leaving work. Get alerts if anything looks suspicious, approve schema changes on the go.\n🏗️ Refactoring Copilot\nLet Claude refactor that legacy module while you're in meetings. Answer its questions about business logic without context switching.\n🧪 Test Suite Doctor\nHave Claude fix failing tests overnight. Wake up to either green builds or specific questions about expected behavior.\n🏗️ Architecture Overview\nOmnara provides a unified platform for monitoring and controlling your AI agents:\n\n  \n      graph TB\n    subgraph \"Your AI Agents\"\n        A[🤖 AI Agents<br/>Claude Code, Cursor, etc.]\n    end\n\n    subgraph \"Omnara Platform\"\n        API[🌐 API Server]\n        DB[(📊 PostgreSQL)]\n        NOTIFY[🔔 Notification Service<br/>Push/Email/SMS]\n    end\n\n    subgraph \"Your Devices\"\n        M[📱 Mobile App]\n        W[💻 Web Dashboard]\n    end\n\n    A -->|Send updates| API\n    API -->|Store data| DB\n    API -->|Trigger notifications| NOTIFY\n    NOTIFY -->|Alert users| M\n    DB -->|Real-time sync| M\n    DB -->|Real-time sync| W\n    M -->|User responses| API\n    W -->|User responses| API\n    API -->|Deliver feedback| A\n\n    style A fill:#e3f2fd,stroke:#1976d2,stroke-width:3px\n    style API fill:#c8e6c9,stroke:#388e3c,stroke-width:2px\n    style DB fill:#ffccbc,stroke:#d84315,stroke-width:2px\n    style NOTIFY fill:#fff59d,stroke:#f57f17,stroke-width:2px\n    style M fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\n    style W fill:#f8bbd0,stroke:#c2185b,stroke-width:3px\n\n    \n  \n    \n      Loading\n\n  \n\n\n🚀 How It Works\n1. Connect Your Agent → Install Omnara SDK or wrapper\n2. Get Real-Time Updates → See every step your agent takes\n3. Respond Instantly → Answer questions from anywhere\n🔄 Two Ways to Use Omnara\n\n\n\nMode\nSetup\nHow It Works\n\n\n\n\nReal-Time Monitoring\nomnara or uv run omnara\nMonitor your Claude session, forwards to Omnara\n\n\nRemote Launch\nomnara serve or uv run omnara serve\nLaunch agents from phone, communicate via MCP\n\n\n\n🔧 Technical Stack\n\nBackend: FastAPI with separate read/write servers for optimal performance\nFrontend: React (Web) + React Native (Mobile)\nProtocol: Model Context Protocol (MCP) + REST API\nDatabase: PostgreSQL with SQLAlchemy ORM\nAuth: Dual JWT system (Supabase for users, custom for agents)\n\n🚀 Quick Start\nOption 1: Monitor Your Claude Sessions\nSee what Claude is doing in real-time:\n\nInstall Omnara:\n# Using pip\npip install omnara\n\n# Using uv (faster)\nuv pip install omnara\n\nStart monitoring:\n# If installed with pip\nomnara\n\n# If installed with uv\nuv run omnara\n\nAuthenticate in your browser (opens automatically)\nSee everything your agent does in the Omnara dashboard!\n\nOption 2: Launch Agents Remotely\nTrigger Claude from your phone:\n\nStart the server on your computer:\n# Using pip\npip install omnara\nomnara serve\n\n# Using uv (faster)\nuv pip install omnara\nuv run omnara serve\n\nSet up your agent in the mobile app with the webhook URL shown\nLaunch agents from anywhere - beach, coffee shop, bed!\n\nFor Developers\n\n🛠️ Development Setup\nPrerequisites\n\nPython 3.10+\nPostgreSQL\nNode.js (for CLI tools)\n\nSetup Steps\n\n\nClone and enter the repository\ngit clone https://github.com/omnara-ai/omnara\ncd omnara\n\n\nSet up Python environment\npython -m venv .venv\nsource .venv/bin/activate  # Windows: .venv\\Scripts\\activate\nmake dev-install\n\n\nGenerate JWT keys\npython scripts/generate_jwt_keys.py\n\n\nConfigure environment (create .env file)\nDATABASE_URL=postgresql://user:password@localhost:5432/omnara\nSUPABASE_URL=https://your-project.supabase.co\nSUPABASE_ANON_KEY=your-anon-key\nJWT_PRIVATE_KEY='-----BEGIN RSA PRIVATE KEY-----\\n...'\nJWT_PUBLIC_KEY='-----BEGIN PUBLIC KEY-----\\n...'\n\n\nInitialize database\ncd shared/\nalembic upgrade head\ncd ..\n\n\nRun services\n# Terminal 1: MCP + REST Server\npython -m servers.app\n\n# Terminal 2: Backend API\ncd backend && python -m main\n\n\n\n🔧 Advanced Usage (Without CLI)\n\nNote: Most users should use the simple omnara or omnara serve commands shown above. These methods are for advanced users who need custom integrations or want to run the underlying scripts directly.\n\nMethod 1: Direct Wrapper Script\nRun the monitoring wrapper directly (what omnara does under the hood):\n# Basic usage\npython -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY\n\n# With git diff tracking\npython -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --git-diff\n\n# Custom API endpoint (for self-hosted)\npython -m webhooks.claude_wrapper_v3 --api-key YOUR_API_KEY --base-url https://your-server.com\nMethod 2: Manual MCP Configuration\nFor custom MCP setups, you can configure manually:\n{\n  \"mcpServers\": {\n    \"omnara\": {\n      \"command\": \"pipx\",\n      \"args\": [\"run\", \"--no-cache\", \"omnara\", \"mcp\", \"--api-key\", \"YOUR_API_KEY\"]\n    }\n  }\n}\nMethod 3: Python SDK\nfrom omnara import OmnaraClient\nimport uuid\n\nclient = OmnaraClient(api_key=\"your-api-key\")\ninstance_id = str(uuid.uuid4())\n\n# Log progress and check for user feedback\nresponse = client.send_message(\n    agent_type=\"claude-code\",\n    content=\"Analyzing codebase structure\",\n    agent_instance_id=instance_id,\n    requires_user_input=False\n)\n\n# Ask for user input when needed\nanswer = client.send_message(\n    content=\"Should I refactor this legacy module?\",\n    agent_instance_id=instance_id,\n    requires_user_input=True\n)\nMethod 4: REST API\ncurl -X POST https://api.omnara.ai/api/v1/messages/agent \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"content\": \"Starting deployment process\", \"agent_type\": \"claude-code\", \"requires_user_input\": false}'\n🤝 Contributing\nWe love contributions! Check out our Contributing Guide to get started.\nDevelopment Commands\nmake lint       # Run code quality checks\nmake format     # Auto-format code\nmake test       # Run test suite\nmake dev-serve  # Start development servers\n📊 Pricing\n\n\n\nPlan\nPrice\nFeatures\n\n\n\n\nFree\n$0/mo\n10 agents/month, Core features\n\n\nPro\n$9/mo\nUnlimited agents, Priority support\n\n\nEnterprise\nContact Us\nTeams, SSO, Custom integrations\n\n\n\n🆘 Support\n\n📖 Documentation\n💬 GitHub Discussions\n🐛 Report Issues\n📧 Email Support\n\n📜 License\nOmnara is open source software licensed under the Apache 2.0 License.\n\n\n","length":7902,"excerpt":"Omnara (YC S25) - Talk to Your AI Agents from Anywhere! - omnara-ai/omnara","siteName":"GitHub","url":"https://github.com/omnara-ai/omnara","addedTime":"2025-08-12,16:45"}